@model HelpDesk_Kvas.Models.Datos.Entity.PresupuestoViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Presupuesto", FormMethod.Post, new { id = "frm-comprobante" }))
{
    <div class="row">
        <div class="col-xs-12">
            <div class="form-group">
                @*@Html.EditorFor(m=>m.n)
                    @Html.LabelFor(x => x.Nombres)
                    @Html.TextBoxFor(x => x.Nombres, new { @class = "form-control", placeholder = "Ingrese el nombre del cliente" })
                    @Html.ValidationMessage("Cliente", null, new { @class = "label label-danger" })*@
            </div>
            <div class="well well-sm">
                <div class="row">
                    <!--Nombre-->
                    <div class="col-xs-7">
                        @Html.TextBoxFor(x => x.IdProducto)
                        @Html.TextBoxFor(x => x.NombreProducto, new { @class = "form-control", placeholder = "Buscar producto", id = "Producto" })
                        @Html.ValidationMessage("producto_agregar", null, new { @class = "label label-danger" })
                    </div>
                    <!--Nombre-->
                    <div class="col-xs-2">
                        @Html.TextBoxFor(x => x.CantidadProducto, new { @class = "form-control", placeholder = "Cantidad" })
                    </div>
                    <!--Nombre-->
                    <div class="col-xs-2">
                        <div class="input-group">
                            <span class="input-group-addon" id="basic-addon1">Bs.</span>
                            @Html.TextBoxFor(x => x.PrecioProducto, new { @class = "form-control", placeholder = "Precio" })
                        </div>
                    </div>
                    <div class="col-xs-1">
                        <button class="btn btn-primary" type="submit" value="agregar_producto" name="action">
                            <i class="glyphicon glyphicon-plus"></i>
                        </button>
                    </div>
                </div>
            </div>
            <hr />

            <ul id="facturador-detalle" class="list-group">
                @*
                    @if (Model.ComprobanteDetalle.Count > 0)
                    {
                        <li class="list-group-item">
                            <div class="row">
                                <div class="col-xs-1"></div>
                                <div class="col-xs-5">
                                    <b>Producto</b>
                                </div>
                                <div class="col-xs-2 text-center">
                                    <b>Cantidad</b>
                                </div>
                                <div class="col-xs-2 text-right">
                                    <b>Precio Unitario</b>
                                </div>
                                <div class="col-xs-2 text-right">
                                    <b>Monto</b>
                                </div>
                            </div>
                        </li>
                    }
                    @foreach (var d in Model.ComprobanteDetalle)
                    {
                        var i = Model.ComprobanteDetalle.IndexOf(d);
                        <li class="list-group-item">
                            <!-- Modelo -->
                            @Html.Hidden("ComprobanteDetalle[" + i + "].ProductoId", d.ProductoId)
                            @Html.Hidden("ComprobanteDetalle[" + i + "].ProductoNombre", d.ProductoNombre)
                            @Html.Hidden("ComprobanteDetalle[" + i + "].PrecioUnitario", d.PrecioUnitario)
                            @Html.Hidden("ComprobanteDetalle[" + i + "].Cantidad", d.Cantidad)
                            @Html.Hidden("ComprobanteDetalle[" + i + "].Retirar", d.Retirar, new { @class = "retirar" })
                            <div class="row">
                                <div class="col-xs-1 text-right">
                                    <button class="btn btn-danger btn-xs btn-block btn-retirar" type="submit" value="retirar_producto" name="action">
                                        <i class="glyphicon glyphicon-remove"></i>
                                    </button>
                                </div>
                                <div class="col-xs-5">
                                    @d.ProductoNombre
                                </div>
                                <div class="col-xs-2 text-center">
                                    @d.Cantidad
                                </div>
                                <div class="col-xs-2 text-right">
                                    @string.Format("{0:c}", d.PrecioUnitario)
                                </div>
                                <div class="col-xs-2 text-right">
                                    @string.Format("{0:c}", d.Monto())
                                </div>
                            </div>
                        </li>
                    }
                    @if (Model.ComprobanteDetalle.Count > 0)
                    {
                        <li class="list-group-item text-right" style="font-size:18px;">
                            @string.Format("{0:c}", Model.Total())
                        </li>
                    }*@
            </ul>
            @*@if (Model.ComprobanteDetalle.Count > 0)
                {
                    <button class="btn btn-primary btn-block btn-lg" type="submit" value="generar" name="action">Generar comprobante</button>
                }*@

        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            LimpiarAgregarProducto();

            $(".btn-retirar").click(function () {
                if (confirm('¿Está seguro de retirar el item seleccionado?')) {
                    $(this).closest('.list-group-item').find('.retirar').val("True");
                    return true;
                }

                return false;
            })
            /* Autocomplete de producto, jquery UI */
            $("#Producto").autocomplete({
                dataType: 'JSON',
                source: function (request, response) {
                    jQuery.ajax({
                        url: '/Presupuesto/BuscarProducto',
                        type: "post",
                        dataType: "json",
                        data: {
                            _nombre: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    id: item.IdProducto,
                                    value: item.Nombre,
                                    precio: item.PrecioVenta
                                }
                            }))
                        }
                    })
                },
                select: function (e, ui) {
                    $("#IdProducto").val(ui.item.id);
                    $("#PrecioProducto").val(ui.item.precio);
                    $("#CantidadProducto").focus();
                }
            })
        })

        function LimpiarAgregarProducto() {
            $("#CabeceraProductoId").val("");
            $("#Producto").val("");
            $("#CabeceraProductoPrecio").val("");
            $("#CabeceraProductoCantidad").val(1);
        }
    </script>
}

