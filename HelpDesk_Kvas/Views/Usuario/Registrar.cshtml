@model HelpDesk_Kvas.Models.Datos.Entity.RegisterUserEntity
@{
    Layout = null;
    ViewBag.Title = "Registrarse";
}
<div class="login-screen"></div>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 class="modal-title">@ViewBag.Title</h3>
</div>
<div class="modal-body">
@using (Ajax.BeginForm("Registrar", "Usuario", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onAjaxRequestSuccess" }, new { @id = "AjaxformId", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-body" style="padding: 5px;">
        <div>@Html.ValidationSummary("", new { @class = "text-danger" })</div>
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4" style="padding-bottom: 10px;">
                <div class="btn-group" role="group" aria-label="...">
                    <div class="btn-group" role="group">
                        @Html.LabelFor(m => m.UserName)
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre de Usuario" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4" style="padding-bottom: 10px;">
                <div class="btn-group" role="group" aria-label="...">
                    <div class="btn-group" role="group">
                        @Html.LabelFor(m => m.Email)
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Correo electronico" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4" style="padding-bottom: 10px;">
                <div class="btn-group" role="group" aria-label="...">
                    <div class="btn-group" role="group">
                        @Html.LabelFor(m => m.IdRoles)
                        @Html.DropDownListFor(model => model.IdRoles, ViewBag.ListaRoles as SelectList, "Seleccione Rol", htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.IdRoles, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6" style="padding-bottom: 10px;">
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Contrasena", style = "backface-visibility: hidden;" })
                <span>@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })</span>
                <br />
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6" style="padding-bottom: 10px;">
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirme Contrasena", style = "backface-visibility: hidden;" })
                <span>@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })</span>
                <br />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4" style="padding-bottom: 10px;">
                <div class="btn-group" role="group" aria-label="...">
                    <div class="btn-group" role="group">
                        @Html.LabelFor(m => m.IdPregunta)
                        @Html.DropDownListFor(model => model.IdPregunta, ViewBag.ListaPreguntas as SelectList, "Seleccione Pregunta", htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.IdPregunta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4" style="padding-bottom: 10px;">
                @Html.LabelFor(m => m.RespuestaSeguridad)
                @Html.EditorFor(model => model.RespuestaSeguridad, new { htmlAttributes = new { @class = "form-control", @placeholder = "Inventario Minimo" } })
                @Html.ValidationMessageFor(model => model.RespuestaSeguridad, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4" style="padding-bottom: 10px;">
                @Html.LabelFor(m => m.Avatar)
                @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", @placeholder = "Seleccione una Imagen" } })
                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4" style="padding-bottom: 10px;">
                @Html.LabelFor(m => m.Estatus)
                @Html.CheckBoxFor(model => model.Estatus, new { htmlAttributes = new { @class = "form-control", @placeholder = "Estatus" } })
                @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
}
</div>


    @*@section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }*@
    <script>
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");
    </script>