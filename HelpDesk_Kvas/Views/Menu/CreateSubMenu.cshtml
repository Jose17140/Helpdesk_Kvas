@model HelpDesk_Kvas.Models.Datos.Entity.GruposDetallesEntity
@{
    ViewBag.Title = "Nueva Tabla";
    Layout = null;
}


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 class="modal-title">Ingrese los datos de @ViewBag.Nombre y haga click en guardar.</h3>
</div>
<div class="modal-body">
    @using (Ajax.BeginForm("CreateSubMenu", "Menu", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onAjaxRequestSuccess" }, new { @id = "AjaxformId", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <fieldset>
                <input id="IdPadre" name="IdPadre" type="hidden" value="@ViewBag.Id" />
                <input id="IdGrupo" name="IdGrupo" type="hidden" value="@ViewBag.IdGrupo" />
                <div class="form-group">
                    @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Orden, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Orden, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Orden, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*@if (ViewBag.IdPadre != 0)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.IdPadre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.IdPadre, ViewBag.ListaGruposDetalles as SelectList, "Seleccione Categoria Padre", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                }
                else
                {
                    <input id="IdPadre" name="IdPadre" type="hidden" value="0" />
                }*@


                <div class="form-group">
                    @Html.LabelFor(model => model.Icono, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Icono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Icono, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UrlDetalle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.UrlDetalle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UrlDetalle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.CheckBoxFor(model => model.Estatus, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </fieldset>

            @*<div class="form-actions col-md-offset-2">
                    <input class="btn btn-primary" type="submit" name="btnguardar" value="Guardar" />|
                    @Html.ActionLink("Regresar al Listado", "Index")
                </div>*@
        </div>
        <div class="btn-group btn-group-justified" role="group" aria-label="group button">
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-default" data-dismiss="modal" role="button">Cerrar</button>
            </div>
            <div class="btn-group" role="group">
                <button type="submit" id="saveImage" class="btn btn-default btn-hover-green" data-action="save" role="button">Guardar</button>
            </div>
        </div>

    }
</div>

<div class="text-primary text-success text-center">
    @ViewBag.MensajeExito
</div>
<div class="text-primary text-danger text-center">
    @ViewBag.MensajeError
</div>

<script>
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");
</script>